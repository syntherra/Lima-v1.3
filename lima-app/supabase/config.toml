# Supabase Configuration for Lima AI Growth OS

# Project settings
project_id = "lima-ai-growth-os"
name = "Lima"

[api]
# Port to use for the API URL
port = 54321
# Schemas to expose in your API. Tables, views and stored procedures in this schema will get API endpoints.
schemas = ["public", "storage", "graphql_public"]
# Extra schemas to add to the search_path of every request
extra_search_path = ["public", "extensions"]
# The maximum number of rows returned from a view, table, or stored procedure. Limits payload size for accidental or malicious requests.
max_rows = 1000

[db]
# Port to use for the local database URL
port = 54322
# Major version of PostgreSQL to use
major_version = 15
# The database password to use
password = "postgres"

[studio]
# Port to use for Supabase Studio
port = 54323
# External URL of the API server that frontend connects to
api_url = "http://localhost:54321"

[inbucket]
# Port to use for the local inbucket instance
port = 54324
# Email testing interface
smtp_port = 54325
pop3_port = 54326

[storage]
# The maximum file size allowed (in bytes)
file_size_limit = 52428800

[auth]
# The base URL of your website. Used as an allow-list for redirects and for constructing URLs used in emails.
site_url = "http://localhost:3000"
# A list of *exact* URLs that auth providers are permitted to redirect to post authentication
additional_redirect_urls = ["https://localhost:3000"]
# How long tokens are valid for, in seconds
jwt_expiry = 3600
# If disabled, the refresh token will never expire
enable_refresh_token_rotation = true
# Allows refresh tokens to be reused after expiry, up to the specified interval
refresh_token_reuse_interval = 10
# Allow/disallow new user signups to your project
enable_signup = true

[auth.email]
# Allow/disallow new user signups via email to your project
enable_signup = true
# If enabled, a user will be required to confirm any email change on both the old and new email addresses. 
# If disabled, only the new email is required to confirm
double_confirm_changes = true
# If enabled, users need to confirm their email address before signing in
enable_confirmations = false

# Use an external OAuth provider
[auth.external.google]
enabled = true
client_id = "env(GOOGLE_CLIENT_ID)"
secret = "env(GOOGLE_CLIENT_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "http://localhost:54321/auth/v1/callback"

[auth.external.microsoft]
enabled = false
client_id = "env(MICROSOFT_CLIENT_ID)"
secret = "env(MICROSOFT_CLIENT_SECRET)"
# Overrides the default auth redirectUrl.
redirect_uri = "http://localhost:54321/auth/v1/callback"

# Enable email testing with Inbucket
[functions]
# Verify JWT tokens for functions
verify_jwt = false